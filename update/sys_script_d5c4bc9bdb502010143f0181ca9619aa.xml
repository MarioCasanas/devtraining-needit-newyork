<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Instantiate the NeedItUtils class.  Call the isDatePast method and pass 
    // the u_when_needed value.
    var niutils = new NeedItUtils();
    var isPast = niutils.isDatePast(current.u_when_needed);

    // If the isDatePast method returns true, the date is in the past.
    if (isPast == true) {
        gs.addErrorMessage("La Fecha de 'When needed' No puede ser del Pasado. Su Solicitud No puede ser grabada en la Base de Datos.");
        current.setAbortAction(true);

    }

    
    var isToday = niutils.isDateToday(current.u_when_needed);

    // If the isDateToday method returns true, the date is in the Future.
    if (isToday == true) {
        gs.addInfoMessage("La Fecha de 'When needed' No puede ser del mismo día!!");
        current.setAbortAction(true);
    }

/* 20210428 Se comentó para hacer la práctica del Script Include
                // rightnow stores the current time
                var rightnow = new GlideDateTime();
                // Create a GlideDateTime object for the When needed date
                var whenNeeded = new GlideDateTime(current.u_when_needed);

                // If the When needed date is before rightnow, do not write the record to the database
                // Output an error message to the screen
                if (rightnow.getDate() == whenNeeded.getDate()) {
                    gs.addErrorMessage("La Fecha de When needed no puede ser del Día Actual. Su Solicitud no puede ser grabada en la Base de Datos.");
                    current.setAbortAction(true);
*/

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-11-10 19:48:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d5c4bc9bdb502010143f0181ca9619aa</sys_id>
        <sys_mod_count>34</sys_mod_count>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_d5c4bc9bdb502010143f0181ca9619aa</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-05-01 03:34:19</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d5c4bc9bdb502010143f0181ca9619aa"/>
</record_update>
